name: Build and Deploy (production)

on:
    release:
        branches: [ main ]
        types: [ released, deleted ]

jobs:
    deploy:
        runs-on: [self-hosted, linux, X64]
        env:
            COMPOSE_FILE: docker-compose.yml:docker-compose.production.yml
            DOTENV_NEXT_PUBLIC_API_VERSION: v1
            DOTENV_NEXT_PUBLIC_YM_ID: ${{ secrets.YM_ID }}
            DOTENV_NEXT_PUBLIC_GA_ID: ${{ secrets.GA_ID }}
            DOTENV_GENERATE_SOURCEMAP: false
        steps:
            - name: Get latest released version
              id: lastver
              uses: pozetroninc/github-action-get-latest-release@v0.5.0
              with:
                  repository: ${{ github.repository }}
                  excludes: prerelease, draft
            - name: Save old image and container ID
              id: old
              working-directory: prod
              run: |
                  echo "::set-output name=image_id::$(docker-compose images -q web)"
                  echo "::set-output name=container_id::$(docker-compose ps -q web)"
            - name: Checkout latest tag
              uses: actions/checkout@v2
              with:
                  ref: ${{ steps.lastver.outputs.release }}
                  path: prod
            - name: Create dotenv file
              uses: iamsauravsharma/create-dotenv@v1.2.0
              with:
                  env-prefix: 'DOTENV_'
                  directory: 'prod/'
            - name: Build container
              working-directory: prod
              run: |
                  docker build -t cyberdas_web:${{ steps.lastver.outputs.release }} .
            - name: Start container
              id: new
              run: |
                  echo "::set-output name=container_id::$(docker run -d cyberdas_web:${{ steps.lastver.outputs.release }})" 
            - name: Validate that container is able to run
              run: |
                  if [ "$(docker container inspect -f '{{.State.Status}}' ${{ steps.new.outputs.container_id }})" != "running" ]; then
                    docker stop ${{ steps.new.outputs.container_id }} && docker rm ${{ steps.new.outputs.container_id }}
                    docker image rm cyberdas_web:${{ steps.lastver.outputs.release }}
                    exit 1 
                  fi
            - name: Deploy container
              working-directory: prod
              run: |
                  docker stop ${{ steps.new.outputs.container_id }} && docker rm ${{ steps.new.outputs.container_id }}
                  TAG=${{ steps.lastver.outputs.release }} docker-compose up -d web
            - name: Remove old image
              run: |
                  docker image rm ${{ steps.old.outputs.image_id }}
              continue-on-error: true